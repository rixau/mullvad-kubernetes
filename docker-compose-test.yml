services:
  # Mullvad VPN Proxy - Mighty Bird (for testing debug logging)
  mullvad-mighty-bird:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mullvad-mighty-bird
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    privileged: true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      # Enable proxy pool mode
      - ENABLE_PROXY_MODE=true
      - ENABLE_KILL_SWITCH=false
      - ENABLE_DNS_CONFIG=false
      - ENABLE_BYPASS_ROUTES=true
      - ENABLE_HEALTH_PROBE=true
      # Proxy configuration
      - SOCKS5_PORT=1080
      - HTTP_PORT=3128
      - PROXY_AUTH=false
      # Enable debug logging for SOCKS5 requests
      - DEBUG_LOGGING=true
      # Metrics exporter
      - METRICS_PORT=9090
      - PROXY_NAME=mighty-bird
    volumes:
      - ./conf/mighty-bird.conf:/etc/wireguard/wg0.conf:ro
      - ./scripts/metrics-exporter.py:/usr/local/bin/metrics-exporter.py:ro
    ports:
      - "1080:1080"   # SOCKS5
      - "3128:3128"   # HTTP
      - "9999:9999"   # Health probe
      - "9090:9090"   # Metrics
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.listen-address=:9091'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9091"
    networks:
      - test-network
    depends_on:
      - mullvad-mighty-bird
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_INSTALL_PLUGINS=
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/opt/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - test-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Test client to generate traffic
  test-client:
    image: curlimages/curl:latest
    container_name: test-client
    depends_on:
      - mullvad-mighty-bird
    networks:
      - test-network
    command:
      - sh
      - -c
      - |
        echo 'üöÄ Starting proxy test client...'
        echo 'Waiting for proxy to be ready...'
        sleep 30
        
        echo ''
        echo '========================================='
        echo 'Testing Mighty Bird Proxy (SOCKS5)'
        echo '========================================='
        
        # Check external IP through proxy
        IP=$$(curl -s --max-time 15 --proxy socks5h://mullvad-mighty-bird:1080 http://httpbin.org/ip | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
        echo "Proxy IP: $$IP"
        
        # Test health endpoint
        echo ''
        echo 'Testing health endpoint...'
        curl -s http://mullvad-mighty-bird:9999
        
        # Test metrics endpoint
        echo ''
        echo 'Testing metrics endpoint...'
        curl -s http://mullvad-mighty-bird:9090/metrics | head -20
        
        echo ''
        echo '========================================='
        echo 'Continuous Testing Started'
        echo '========================================='
        echo 'Making requests every 10 seconds...'
        echo 'Check Grafana at http://localhost:3000'
        echo 'Username: admin, Password: admin'
        echo ''
        
        # Continuous testing loop
        while true; do
          # Random endpoint to test
          ENDPOINT=$$(shuf -n 1 -e "http://httpbin.org/ip" "http://httpbin.org/uuid" "http://httpbin.org/user-agent")
          
          START=$$(date +%s)
          RESULT=$$(curl -s --max-time 10 --proxy socks5h://mullvad-mighty-bird:1080 "$$ENDPOINT" 2>&1)
          END=$$(date +%s)
          DURATION=$$((END - START))
          
          if [ $$? -eq 0 ]; then
            echo "$$(date '+%Y-%m-%d %H:%M:%S') - ‚úÖ Request successful ($$DURATION"s") - $$ENDPOINT"
          else
            echo "$$(date '+%Y-%m-%d %H:%M:%S') - ‚ùå Request failed - $$ENDPOINT"
          fi
          
          sleep 10
        done

volumes:
  prometheus-data:
  grafana-data:

networks:
  test-network:
    driver: bridge
