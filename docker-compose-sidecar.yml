services:
  # Mullvad WireGuard sidecar
  mullvad-sidecar:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mullvad-sidecar
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    privileged: true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - "9999:9999"  # Health probe endpoint
    volumes:
      # Mount your chosen Mullvad config file
      - ./conf/free-salmon.conf:/etc/wireguard/wg0.conf:ro
    networks:
      - test-network

  # Test application that checks IP to verify VPN
  ip-test-app:
    image: curlimages/curl:latest
    container_name: ip-test-app
    # Share network namespace with VPN sidecar
    network_mode: "container:mullvad-sidecar"
    depends_on:
      - mullvad-sidecar
    command:
      - sh
      - -c
      - |
        echo 'Testing Mullvad VPN functionality...'
        echo 'Waiting for VPN to be ready...'
        sleep 30
        echo 'Checking external IP...'
        CURRENT_IP=$$(curl -s --max-time 15 http://httpbin.org/ip | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
        echo "Current external IP: $$CURRENT_IP"
        if echo "$$CURRENT_IP" | grep -qE '^(155\.|185\.|194\.|91\.|149\.|98\.)'; then
          echo "MULLVAD VPN WORKING - Using Mullvad IP: $$CURRENT_IP"
          echo "SUCCESS: Traffic is routing through Mullvad WireGuard!"
        else
          echo "VPN NOT WORKING - IP: $$CURRENT_IP"
          echo "FAILURE: Traffic is not routing through VPN"
        fi
        echo 'Starting continuous monitoring...'
        while true; do
          sleep 60
          NEW_IP=$$(curl -s --max-time 10 http://httpbin.org/ip | grep -o '"origin": "[^"]*"' | cut -d'"' -f4)
          echo "$$(date): External IP: $$NEW_IP"
        done

networks:
  test-network:
    driver: bridge
